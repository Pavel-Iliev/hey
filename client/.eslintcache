[{"/Users/pavel/Desktop/solo-P/hey/client/src/index.js":"1","/Users/pavel/Desktop/solo-P/hey/client/src/App.js":"2","/Users/pavel/Desktop/solo-P/hey/client/src/reportWebVitals.js":"3","/Users/pavel/Desktop/solo-P/hey/client/src/ApiServices.js":"4","/Users/pavel/Desktop/solo-P/hey/client/src/test-redirect.jsx":"5","/Users/pavel/Desktop/solo-P/hey/client/src/components/loadingPage/LoadingPage.jsx":"6","/Users/pavel/Desktop/solo-P/hey/client/src/components/authentication/Authentication.jsx":"7","/Users/pavel/Desktop/solo-P/hey/client/src/components/backgroud/Background.jsx":"8","/Users/pavel/Desktop/solo-P/hey/client/src/components/componentsRegister/loginForm.jsx":"9","/Users/pavel/Desktop/solo-P/hey/client/src/components/componentsRegister/registerForm.jsx":"10","/Users/pavel/Desktop/solo-P/hey/client/src/components/dailyNews/DailyNews.jsx":"11","/Users/pavel/Desktop/solo-P/hey/client/src/components/headerPage/HeaderPage.jsx":"12","/Users/pavel/Desktop/solo-P/hey/client/src/components/rightMenu/RightMenu.jsx":"13","/Users/pavel/Desktop/solo-P/hey/client/src/components/leftMenu/LeftMenu.jsx":"14","/Users/pavel/Desktop/solo-P/hey/client/src/components/newsPage/NewsPage.jsx":"15","/Users/pavel/Desktop/test per video/hey/client/src/index.js":"16","/Users/pavel/Desktop/test per video/hey/client/src/reportWebVitals.js":"17","/Users/pavel/Desktop/test per video/hey/client/src/App.js":"18","/Users/pavel/Desktop/test per video/hey/client/src/ApiServices.js":"19","/Users/pavel/Desktop/test per video/hey/client/src/components/loadingPage/LoadingPage.jsx":"20","/Users/pavel/Desktop/test per video/hey/client/src/components/authentication/Authentication.jsx":"21","/Users/pavel/Desktop/test per video/hey/client/src/components/dailyNews/DailyNews.jsx":"22","/Users/pavel/Desktop/test per video/hey/client/src/components/backgroud/Background.jsx":"23","/Users/pavel/Desktop/test per video/hey/client/src/components/componentsRegister/loginForm.jsx":"24","/Users/pavel/Desktop/test per video/hey/client/src/components/componentsRegister/registerForm.jsx":"25","/Users/pavel/Desktop/test per video/hey/client/src/components/headerPage/HeaderPage.jsx":"26","/Users/pavel/Desktop/test per video/hey/client/src/components/leftMenu/LeftMenu.jsx":"27","/Users/pavel/Desktop/test per video/hey/client/src/components/rightMenu/RightMenu.jsx":"28","/Users/pavel/Desktop/test per video/hey/client/src/components/newsPage/NewsPage.jsx":"29"},{"size":500,"mtime":1609177352213,"results":"30","hashOfConfig":"31"},{"size":1792,"mtime":1611072982475,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1609177352214,"results":"33","hashOfConfig":"31"},{"size":2821,"mtime":1611058776679,"results":"34","hashOfConfig":"31"},{"size":140,"mtime":1610202683594,"results":"35","hashOfConfig":"36"},{"size":611,"mtime":1610539859727,"results":"37","hashOfConfig":"31"},{"size":3473,"mtime":1610701608980,"results":"38","hashOfConfig":"31"},{"size":179,"mtime":1610814641530,"results":"39","hashOfConfig":"31"},{"size":2581,"mtime":1610960339717,"results":"40","hashOfConfig":"31"},{"size":3112,"mtime":1610960413314,"results":"41","hashOfConfig":"31"},{"size":8258,"mtime":1611076599510,"results":"42","hashOfConfig":"31"},{"size":1054,"mtime":1610972324829,"results":"43","hashOfConfig":"31"},{"size":3734,"mtime":1611074451549,"results":"44","hashOfConfig":"31"},{"size":4502,"mtime":1611070470371,"results":"45","hashOfConfig":"31"},{"size":16240,"mtime":1611076696633,"results":"46","hashOfConfig":"31"},{"size":500,"mtime":1611130091527,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1611130091527,"results":"49","hashOfConfig":"48"},{"size":1385,"mtime":1611161696100,"results":"50","hashOfConfig":"48"},{"size":2873,"mtime":1611161679910,"results":"51","hashOfConfig":"48"},{"size":611,"mtime":1611130091525,"results":"52","hashOfConfig":"48"},{"size":3473,"mtime":1611130091522,"results":"53","hashOfConfig":"48"},{"size":8197,"mtime":1611132489616,"results":"54","hashOfConfig":"48"},{"size":179,"mtime":1611130091522,"results":"55","hashOfConfig":"48"},{"size":2612,"mtime":1611130091523,"results":"56","hashOfConfig":"48"},{"size":3145,"mtime":1611216546413,"results":"57","hashOfConfig":"48"},{"size":1054,"mtime":1611130091524,"results":"58","hashOfConfig":"48"},{"size":4750,"mtime":1611133757299,"results":"59","hashOfConfig":"48"},{"size":3734,"mtime":1611130091526,"results":"60","hashOfConfig":"48"},{"size":15937,"mtime":1611161815108,"results":"61","hashOfConfig":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1adflxo",{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"12lesjw",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"nfmveb",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},"/Users/pavel/Desktop/solo-P/hey/client/src/index.js",[],["126","127"],"/Users/pavel/Desktop/solo-P/hey/client/src/App.js",["128","129","130","131","132"],"/Users/pavel/Desktop/solo-P/hey/client/src/reportWebVitals.js",[],"/Users/pavel/Desktop/solo-P/hey/client/src/ApiServices.js",[],"/Users/pavel/Desktop/solo-P/hey/client/src/test-redirect.jsx",[],["133","134"],"/Users/pavel/Desktop/solo-P/hey/client/src/components/loadingPage/LoadingPage.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/authentication/Authentication.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/backgroud/Background.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/componentsRegister/loginForm.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/componentsRegister/registerForm.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/dailyNews/DailyNews.jsx",["135"],"/Users/pavel/Desktop/solo-P/hey/client/src/components/headerPage/HeaderPage.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/rightMenu/RightMenu.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/leftMenu/LeftMenu.jsx",["136","137","138","139"],"/Users/pavel/Desktop/solo-P/hey/client/src/components/newsPage/NewsPage.jsx",["140","141"],"/Users/pavel/Desktop/test per video/hey/client/src/index.js",[],["142","143"],"/Users/pavel/Desktop/test per video/hey/client/src/reportWebVitals.js",[],"/Users/pavel/Desktop/test per video/hey/client/src/App.js",[],"/Users/pavel/Desktop/test per video/hey/client/src/ApiServices.js",[],"/Users/pavel/Desktop/test per video/hey/client/src/components/loadingPage/LoadingPage.jsx",[],"/Users/pavel/Desktop/test per video/hey/client/src/components/authentication/Authentication.jsx",[],"/Users/pavel/Desktop/test per video/hey/client/src/components/dailyNews/DailyNews.jsx",["144","145"],"import './style-dailyNews.css';\nimport { useState, useEffect } from 'react';\nimport Background from '../../components/backgroud/Background';\nimport HeaderPage from '../../components/headerPage/HeaderPage';\nimport { getWeather } from '../../ApiServices';\nimport RightMenu from '../rightMenu/RightMenu';\nimport LeftMenu from '../leftMenu/LeftMenu';\nimport NewsPage from '../newsPage/NewsPage';\nimport { \n  getNews,\n  getFiltersServer, \n  postFiltersPersonal, \n  deleteFilters, \n  getNewsServer,\n  postNewsPersonal,\n  deleteNews,\n} from '../../ApiServices';\nimport moment from 'moment';\n\nimport { BrowserRouter as Router , Switch , Route } from \"react-router-dom\";\n\nfunction DailyNews(props) {\n  \n  const { user, setIsUserAuthenticated, setUser } = props;\n  const [titlePage, setTitlePage] = useState('Your Daily News');\n\n  const [isLefMenuOpen, setIsLeftMenuOpen] = useState(false);\n  const [isRightMenuOpen, setIsRightMenuOpen] = useState(false);\n\n  const [time, setTime] = useState('');\n\n  const [countryGeolocation, setCountryGeolocation] = useState('');\n  const [cityGeolocation, setCityGeolocation] = useState('');\n  const [temperatureDescGeolocation, setTemperatureDescGeolocation] = useState('');\n  const [highTemperatureGeolocation, setHighTemperatureGeolocation] = useState('');\n  const [lowTemperatureGeolocation, setLowTemperatureGeolocation] = useState('');\n  const [iconLinkGeolocation, setIconLinkGeolocation] = useState('');\n\n  const [filters, setFilters] = useState([]);\n\n  const [newsServer, setNewsServer] = useState([]);\n\n  const [dailyNews, setDailyNews] = useState([]);\n\n  const [dateForFilter, setDateForFilter] = useState(moment().format(\"YYYY-MM-DD\"))\n  const [countryForFilter, setCountryForFilter] = useState('en')\n\n  useEffect(()=> {\n    const countries = require(\"i18n-iso-countries\");\n\n    countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n  \n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n\n        \n        getWeather(latitude, longitude).then((data) => {\n          setTime(data.data.observations.location[0].observation[0].utcTime);\n          setCountryGeolocation(data.data.observations.location[0].observation[0].country);\n          setCityGeolocation(data.data.observations.location[0].observation[0].city);\n          setTemperatureDescGeolocation(data.data.observations.location[0].observation[0].temperatureDesc);\n          setHighTemperatureGeolocation(data.data.observations.location[0].observation[0].highTemperature);\n          setLowTemperatureGeolocation(data.data.observations.location[0].observation[0].lowTemperature);\n          setIconLinkGeolocation(data.data.observations.location[0].observation[0].iconLink);\n          \n          setCountryForFilter(countries.getAlpha2Code(data.data.observations.location[0].country, \"en\").toLowerCase())\n\n        });\n      });\n    }  \n  },[])\n\n\n  useEffect(() => {\n    const tokenUser = localStorage.getItem('token');\n    getFiltersServer(tokenUser).then((filters) => setFilters(filters));\n    getNewsServer(tokenUser).then((news) => setNewsServer(news));\n  }, [])\n\n  function addFilters( addFilter, token ) {\n    postFiltersPersonal( addFilter, token )\n      .then((filter) => setFilters([...filters, filter.data]));\n  }\n\n  function deleteOnefilter(id) {\n    deleteFilters(id).then(() => {\n      setFilters((filter) =>\n        filter.filter((filterDelete) => filterDelete._id !== id)\n      );\n    });\n  }\n\n  function checkForNews() {\n\n    Promise.all(filters.map(oneFilter => {\n      return getNews(oneFilter.filter, countryForFilter, dateForFilter)\n        .then(news => {\n          return news.articles.slice(0,5)\n        })\n    }))\n    .then(news => setDailyNews(news.flat()));\n  }\n\n\n  //post method\n  function addNewsToPersonal(author, description, publishedAt, source, title, url, urlToImage, token) {\n    postNewsPersonal(author, description, publishedAt, source, title, url, urlToImage , token)\n      .then((event) => setNewsServer([...newsServer, event.data]));\n  }\n\n  //deleteMethod\n  function deleteOneNews(id) {\n    deleteNews(id).then(() => {\n      setNewsServer((news) =>\n        news.filter((newsDelete) => newsDelete._id !== id)\n      );\n    });\n  }\n\n  return(\n    <>\n      <div className=\"home height-page\">\n\n          <HeaderPage \n            titlePage={titlePage}\n            setTitlePage={setTitlePage}\n            time={time}\n          />\n          <Background />\n\n          <RightMenu \n            isLefMenuOpen={isLefMenuOpen}\n            setIsLeftMenuOpen={setIsLeftMenuOpen}\n            isRightMenuOpen={isRightMenuOpen}\n            setIsRightMenuOpen={setIsRightMenuOpen}\n          />\n          <LeftMenu \n            user={user}\n            setUser={setUser}\n            setIsUserAuthenticated={setIsUserAuthenticated}\n            filters={filters}\n            addFilters={addFilters}\n            deleteOnefilter={deleteOnefilter}\n            countryGeolocation={countryGeolocation}\n            cityGeolocation={cityGeolocation}\n            temperatureDescGeolocation={temperatureDescGeolocation}\n            highTemperatureGeolocation={highTemperatureGeolocation}\n            lowTemperatureGeolocation={lowTemperatureGeolocation}\n            iconLinkGeolocation={iconLinkGeolocation}\n            isLefMenuOpen={isLefMenuOpen}\n            setIsLeftMenuOpen={setIsLeftMenuOpen}\n            isRightMenuOpen={isRightMenuOpen}\n            setIsRightMenuOpen={setIsRightMenuOpen}\n            setDailyNews={setDailyNews}\n            dateForFilter={dateForFilter}\n            countryForFilter={countryForFilter}\n            checkForNews={checkForNews}\n          />\n\n          <Switch>\n            <Route exact path=\"/\">\n              <NewsPage \n              categoryForApi='daily'\n              addNewsToPersonal={addNewsToPersonal}\n              dailyNews={dailyNews}\n              setDailyNews={setDailyNews}\n              checkForNews={checkForNews}\n              filters={filters}\n              countryForFilter={countryForFilter}\n              dateForFilter={dateForFilter}\n\n              />\n            </Route>\n            <Route path=\"/business\">\n              <NewsPage\n                categoryForApi='business'\n                addNewsToPersonal={addNewsToPersonal}\n                dailyNews={dailyNews}\n              />\n            </Route>\n            <Route path=\"/technology\">\n              <NewsPage \n                categoryForApi='technology'\n                addNewsToPersonal={addNewsToPersonal}\n                dailyNews={dailyNews}\n              />\n            </Route>\n            <Route path=\"/entertainment\">\n              <NewsPage \n                categoryForApi='entertainment'\n                addNewsToPersonal={addNewsToPersonal}\n                dailyNews={dailyNews}\n              />\n            </Route>\n            <Route path=\"/health\">\n              <NewsPage \n                categoryForApi='health'\n                addNewsToPersonal={addNewsToPersonal}\n                dailyNews={dailyNews}\n              />\n            </Route>\n            <Route path=\"/general\">\n              <NewsPage \n                categoryForApi='general'\n                addNewsToPersonal={addNewsToPersonal}\n                dailyNews={dailyNews}\n              />\n            </Route>\n            <Route path=\"/science\">\n              <NewsPage \n                categoryForApi='science'\n                addNewsToPersonal={addNewsToPersonal}\n                dailyNews={dailyNews}\n              />\n            </Route>\n            <Route path=\"/sports\">\n              <NewsPage \n                categoryForApi='sports'\n                addNewsToPersonal={addNewsToPersonal}\n                dailyNews={dailyNews}\n              />\n            </Route>\n            <Route path=\"/saved-news\">\n              <NewsPage \n                checkForSavedNews='saved-news'\n                newsForPage={newsServer}\n                addNewsToPersonal={addNewsToPersonal}\n                deleteOneNews={deleteOneNews}\n                dailyNews={dailyNews}\n              />\n            </Route>\n          </Switch>\n      </div>\n      \n    </>\n  ); \n}\n\nexport default DailyNews;","/Users/pavel/Desktop/test per video/hey/client/src/components/backgroud/Background.jsx",[],"/Users/pavel/Desktop/test per video/hey/client/src/components/componentsRegister/loginForm.jsx",[],"/Users/pavel/Desktop/test per video/hey/client/src/components/componentsRegister/registerForm.jsx",[],"/Users/pavel/Desktop/test per video/hey/client/src/components/headerPage/HeaderPage.jsx",[],"/Users/pavel/Desktop/test per video/hey/client/src/components/leftMenu/LeftMenu.jsx",["146","147","148","149"],"import './style-leftMenu.css';\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from 'react';\nimport {getNews} from '../../ApiServices';\n\nfunction LeftMenu(props) {\n\n  const history = useHistory();\n\n  const { setIsLeftMenuOpen , isRightMenuOpen, countryGeolocation , cityGeolocation, temperatureDescGeolocation , highTemperatureGeolocation , lowTemperatureGeolocation ,iconLinkGeolocation, filters, addFilters, deleteOnefilter, setIsUserAuthenticated, setUser,setDailyNews, dateForFilter, countryForFilter, checkForNews  } = props;\n\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [valueFilter, setValueFilter] = useState('');\n\n  const nameUser = localStorage.getItem('name');\n\n\n  function closeLeftMenu() {\n    document.querySelector('.left-menu').classList.remove('open-left-menu');\n    setMenuOpen(false);\n    setIsLeftMenuOpen(false);\n  }\n\n  function openLeftMenu() {\n    document.querySelector('.left-menu').classList.add('open-left-menu');\n    setMenuOpen(true);\n    setIsLeftMenuOpen(true);\n  }\n\n  function handleChangeFilter(event) {\n    setValueFilter(event.target.value);\n  }\n\n  function handleSubmit (event) {\n    event.preventDefault();\n    if( valueFilter ) {\n      const token = localStorage.getItem('token');\n      addFilters(valueFilter, token);\n      setValueFilter('');\n    } \n  }\n\n  function logOut() {\n    history.push(\"/\");\n    localStorage.clear()\n    setIsUserAuthenticated(false);\n    setUser(null);\n  }\n\n\n  function goToLanding() {\n    history.push(\"/\");\n  }\n\n  return(\n    <>\n      <div \n      // onClick={checkForNews}\n      className={`left-menu ${isRightMenuOpen ? 'hide-menu' : ''}`}>\n        <div className=\"left-menu__title title-menu\">\n          <span onClick={menuOpen ? closeLeftMenu : openLeftMenu}  className=\"left-menu__btn menu-btn\">\n            <img src=\"/images/user-menu.svg\" alt=\"category menu\"/>\n          </span>\n          <h3 className=\"left-menu__user\">\n            <img src=\"/images/user.svg\" alt=\"user\"/>\n            <span>{nameUser}</span>\n            </h3>\n        </div>\n        <div className=\"left-menu__weather-info\">\n          <div className=\"left-menu__weather-info-col col-1\">\n            <span className=\"color-blue\">{countryGeolocation},</span>\n            <span className=\"color-blue\">{cityGeolocation},</span>\n            <span className=\"color-blue\">{temperatureDescGeolocation}</span>\n          </div>\n          <div className=\"left-menu__weather-info-col col-2\">\n            <div className=\"left-menu__weather-info-col--temp\">\n            <span>{highTemperatureGeolocation}°</span>\n            <span>{lowTemperatureGeolocation}°</span>\n            </div>\n          </div>\n          <div className=\"left-menu__weather-info-col col-3\">\n            <img src={iconLinkGeolocation} alt=\"weather icon\"/>\n          </div>\n        </div>\n        <div className=\"left-menu__text\">\n          <p>Add filters <br/>for your <span className=\"color-blue\">daily news</span></p>\n        </div>\n        <form onSubmit={handleSubmit} className=\"left-menu__input\">\n          <button>\n            <img src=\"/images/check.svg\" alt=\"check\"/>\n          </button>\n          <input \n            value={valueFilter}\n            onChange={handleChangeFilter}\n            type=\"text\" \n            placeholder=\"Type the filter...\"\n          />\n        </form>\n        <div className=\"container-filters\">\n          <ul className=\"left-menu__filters\">\n            {\n              filters.length === 0 ? <li className=\"left-menu__filters--text color-blue\">Set filters for your daily news</li> : \n              filters.map(filter => \n                <li className=\"button-blue pos-rel\" key={filter._id}>\n                  <button onClick={() => deleteOnefilter(filter._id)}>\n                    {filter.filter}\n                  </button>\n                </li>\n              )\n            }          \n          </ul>\n        </div>\n        <div className=\"left-menu__wrap-bottom\">\n          <p className=\"left-menu__wrap-bottom--text\">\n          Go for <br /> <span className=\"color-blue\">your news</span>\n          </p>\n          <div className=\"wrap-logout-time-log\">\n            <button className=\"log-out-btn\">\n              <img src=\"/images/log-out.svg\" alt=\"log out\"/>\n              <span onClick={logOut}>\n                Log Out\n              </span>\n              </button>\n              <button \n                onClick={ () => {\n                  checkForNews()\n                  goToLanding()\n                  closeLeftMenu()\n                }}\n                className={`go-for-news button-blue ${isRightMenuOpen ? 'hide-menu' : ''}`}>\n                Chek news\n              </button>\n          </div>\n        </div>\n      </div>\n    </>\n  ); \n}\n\nexport default LeftMenu;","/Users/pavel/Desktop/test per video/hey/client/src/components/rightMenu/RightMenu.jsx",[],"/Users/pavel/Desktop/test per video/hey/client/src/components/newsPage/NewsPage.jsx",["150","151","152"],"import './style-newsPage.css';\nimport { SwipeableList, SwipeableListItem } from '@sandstreamdev/react-swipeable-list';\nimport '@sandstreamdev/react-swipeable-list/dist/styles.css';\nimport { InView } from 'react-intersection-observer';\nimport { getWeather, getNewsCategory, login, getNews } from '../../ApiServices';\nimport moment from \"moment\";\nimport { useEffect, useState, useCallback } from 'react';\nimport {useHistory} from 'react-router-dom';\n\nfunction NewsPage(props) {\n  const { newsForPage, dailyNews , addNewsToPersonal, deleteOneNews, categoryForApi, checkForSavedNews, checkForNews, filters, countryForFilter, dateForFilter, setDailyNews } = props;\n\n  const [notificationSaved, setNotificationSaved] = useState(false);\n  const [notificationDeleted, setNotificationDeleted] = useState(false);\n\n  const [activeCategory, setActiveCategory] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('gb'); // only for inital state, untill the user set or accept the global notification\n\n  const [automaticCountry, setAutomaticCountry] = useState(true);\n\n  const [tempNews, setTempNews] = useState([])\n\n  const history = useHistory()\n\n\n\n  const memoizedCallback = useCallback(\n    () => {\n      if (categoryForApi) {\n        document.querySelector('.country-select').classList.add('country-select__show')\n        document.querySelector('.swipe-icons').classList.add('swipe-icons-category')\n      } else {\n        document.querySelector('.country-select').classList.remove('country-select__show')\n        document.querySelector('.swipe-icons').classList.remove('swipe-icons-category')\n      }\n\n      if (checkForSavedNews) {\n        document.querySelector('.swipe-icons').classList.add('swipe-icons-saved')\n      } else {\n        document.querySelector('.swipe-icons').classList.remove('swipe-icons-saved')\n      }\n      if(categoryForApi === 'daily') {\n        document.querySelector('.country-select').classList.remove('country-select__show')\n      }\n    },\n    [categoryForApi, checkForSavedNews],\n  );\n\n  useEffect(()=> {\n    const countries = require(\"i18n-iso-countries\");\n    countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n\n    if (navigator.geolocation && automaticCountry) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n\n        getWeather(latitude, longitude).then((data) => {\n          const country = countries.getAlpha2Code(data.data.observations.location[0].country, \"en\").toLowerCase()\n          // first the country is UK, once accept the position notification, turn all on the current state\n          setSelectedCountry(country);\n        });\n      });\n    }  \n    const {pathname} = history.location\n\n    if (pathname === '/' && !dailyNews.length && !tempNews.length) {\n      console.log(dailyNews, 'daily')\n      getTempNews()\n    } else if (pathname === '/saved-news') {\n    } else {\n      getAndSetNewsCategoriesByCountry(selectedCountry, categoryForApi);\n    }\n\n    memoizedCallback()\n\n  } , [categoryForApi, selectedCountry, automaticCountry, memoizedCallback, checkForSavedNews, checkForNews]);\n  \n  function getTempNews() {\n    console.log('tempNews called');\n    Promise.all(filters.map(oneFilter => {\n      return getNews(oneFilter.filter, countryForFilter, dateForFilter)\n        .then(news => {\n          return news.articles.slice(0,5)\n        })\n    }))\n    .then(news => {\n      setTempNews(news.flat())\n      // setDailyNews(news.flat())\n    });\n  }\n\n  // get Categories LOGIC from api\n  //set the new country after select itx\n  function onCountryChange(event) {\n    setAutomaticCountry(false);\n    setSelectedCountry(event.target.value);\n    getAndSetNewsCategoriesByCountry(event.target.value, categoryForApi);\n  }\n\n  //function to set the categories by country\n  function getAndSetNewsCategoriesByCountry(country, category) {\n    getNewsCategory(country, category)\n      .then(categoryNews => setActiveCategory(categoryNews.articles))\n  }\n\n  //save new to personals news\n  function save(author, description, publishedAt, source, title, url, urlToImage) {\n    const token = localStorage.getItem('token');\n    addNewsToPersonal(author, description, publishedAt, source, title, url, urlToImage, token);\n  }\n\n  //test to delete method\n  function deleteSelectedNews(id) {\n    deleteOneNews(id);\n  }  \n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n  \n  function addNewsAnimation(card) {\n    card.style.transform = `translate(${getRandomInt(-3, 3)}%, ${getRandomInt(0, 6)}%) rotate(${getRandomInt(-2, 2)}deg)`;  \n    card.style.WebkitTransition = 'transform 1s';\n    card.style.MozTransition = 'transform 1s';\n  }\n\n  function removeNewsAnimation(card) {\n    card.style.transform = `translate(0,0) rotate(0deg)`;  \n    card.style.WebkitTransition = 'transform 0s';\n    card.style.MozTransition = 'transform 0s';\n  }\n\n  function showSaved() {\n    setNotificationSaved(true);\n    setTimeout(() => {\n      setNotificationSaved(false);\n    }, 1500);\n  }\n\n  function showDeleted() {\n    setNotificationDeleted(true);\n    setTimeout(() => {\n      setNotificationDeleted(false);\n    }, 1500);\n  }\n\n  const test = dailyNews.length ? dailyNews : tempNews\n\n  return(\n    <>\n      <div className=\"news-page pos-rel\">\n        {\n          newsForPage ? \n        <SwipeableList>\n          {newsForPage.map(singleNews => {\n            return <InView \n                      className=\"news-card\"\n                      onChange={(inView, entry) => {\n                        if(inView) {\n                          addNewsAnimation(entry.target)\n                          } else {\n                          removeNewsAnimation(entry.target)\n                        }\n                      }}\n                      key={singleNews._id}\n                    >\n                      <SwipeableListItem\n                        swipeLeft={{\n                          action: () => {\n                            deleteSelectedNews(singleNews._id)\n                            showDeleted()\n                          }\n                        }}\n\n                        swipeRight={categoryForApi ? \n                          {\n                          action: () => {\n                            save(singleNews.author, singleNews.description, singleNews.publishedAt, singleNews.source, singleNews.title, singleNews.url, singleNews.urlToImage);\n                            showSaved();\n                          }\n                        }\n                        : false }\n                      >\n                        <div className=\"news-image pos-rel br-10\">\n                          <img className=\"img-cover\" src={singleNews.urlToImage} alt=\"\"/>\n                          <div className=\"no-avaiable-img\">\n                            <img src=\"/images/logo-black.svg\" alt=\"no available img\"/>\n                          </div>\n                        </div>\n                        <div className=\"news-wrap-text br-10\">\n                          <div className=\"news-wrap-text__title br-10\">\n                            <h2>{singleNews.title}</h2>\n                          </div>\n                          <div className=\"news-wrap-text__content\">\n                            <p>{singleNews.description}</p>\n                          </div>\n                        </div>\n                        <div className=\"news-bottom-wrap\">\n                          <div className=\"news-bottom-wrap__info\">\n                            <p>\n                              <span className=\"title-font\">{singleNews.source},</span><br />\n                              <span className=\"title-font\">{singleNews.author},</span><br />\n                              <span className=\"color-blue news-data\">{moment(singleNews.publishedAt).format('Do, MMMM')}</span>\n                            </p>\n                          </div>\n                          <div className=\"news-bottom-wrap__button\">\n                            <a className=\"button-blue pos-rel\" href={singleNews.url} target=\"_blank\" rel=\"noreferrer\">\n                              Link\n                              <img src=\"/images/link.svg\" alt=\"link\"/>\n                            </a>\n                          </div>\n                        </div>\n                      </SwipeableListItem>\n                    </InView>\n          })}\n        </SwipeableList>\n        : \n        activeCategory.length ?\n        <SwipeableList>\n          {activeCategory.map((singleNews, index) => {\n            return <InView \n                      className=\"news-card\"\n                      onChange={(inView, entry) => {\n                        if(inView) {\n                          addNewsAnimation(entry.target)\n                          } else {\n                          removeNewsAnimation(entry.target)\n                        }\n                      }}\n                      key={index}\n                    >\n                      <SwipeableListItem\n                        swipeRight={{\n                          action: () => {\n                            save(singleNews.author, singleNews.description, singleNews.publishedAt, singleNews.source.name, singleNews.title, singleNews.url, singleNews.urlToImage);\n                            showSaved();\n                          }\n                        }}\n                      >\n                        <div className=\"news-image pos-rel br-10\">\n                          <img className=\"img-cover\" src={singleNews.urlToImage} alt=\"\"/>\n                          <div className=\"no-avaiable-img\">\n                            <img src=\"/images/logo-black.svg\" alt=\"no available img\"/>\n                          </div>\n                        </div>\n                        <div className=\"news-wrap-text br-10\">\n                          <div className=\"news-wrap-text__title br-10\">\n                            <h2>{singleNews.title}</h2>\n                          </div>\n                          <div className=\"news-wrap-text__content\">\n                            <p>{singleNews.description}</p>\n                          </div>\n                        </div>\n                        <div className=\"news-bottom-wrap\">\n                          <div className=\"news-bottom-wrap__info\">\n                            <p>\n                              <span className=\"title-font\">{singleNews.source.name},</span><br />\n                              <span className=\"title-font\">{singleNews.author},</span><br />\n                              <span className=\"color-blue news-data\">{moment(singleNews.publishedAt).format('Do, MMMM')}</span>\n                            </p>\n                          </div>\n                          <div className=\"news-bottom-wrap__button\">\n                            <a className=\"button-blue pos-rel\" href={singleNews.url} target=\"_blank\" rel=\"noreferrer\">\n                              Link\n                              <img src=\"/images/link.svg\" alt=\"link\"/>\n                            </a>\n                          </div>\n                        </div>\n                      </SwipeableListItem>\n                    </InView>\n          })}\n        </SwipeableList> : \n        <SwipeableList>\n        {test.map((singleNews, index) => {\n          return <InView \n                    className=\"news-card\"\n                    onChange={(inView, entry) => {\n                      if(inView) {\n                        addNewsAnimation(entry.target)\n                        } else {\n                        removeNewsAnimation(entry.target)\n                      }\n                    }}\n                    key={index}\n                  >\n                    <SwipeableListItem\n                      swipeRight={{\n                        action: () => {\n                          save(singleNews.author, singleNews.description, singleNews.publishedAt, singleNews.source.name, singleNews.title, singleNews.url, singleNews.urlToImage);\n                          showSaved();\n                        }\n                      }}\n                    >\n                      <div className=\"news-image pos-rel br-10\">\n                        <img className=\"img-cover\" src={singleNews.urlToImage} alt=\"\"/>\n                        <div className=\"no-avaiable-img\">\n                          <img src=\"/images/logo-black.svg\" alt=\"no available img\"/>\n                        </div>\n                      </div>\n                      <div className=\"news-wrap-text br-10\">\n                        <div className=\"news-wrap-text__title br-10\">\n                          <h2>{singleNews.title}</h2>\n                        </div>\n                        <div className=\"news-wrap-text__content\">\n                          <p>{singleNews.description}</p>\n                        </div>\n                      </div>\n                      <div className=\"news-bottom-wrap\">\n                        <div className=\"news-bottom-wrap__info\">\n                          <p>\n                            <span className=\"title-font\">{singleNews.source.name},</span><br />\n                            <span className=\"title-font\">{singleNews.author},</span><br />\n                            <span className=\"color-blue news-data\">{moment(singleNews.publishedAt).format('Do, MMMM')}</span>\n                          </p>\n                        </div>\n                        <div className=\"news-bottom-wrap__button\">\n                          <a className=\"button-blue pos-rel\" href={singleNews.url} target=\"_blank\" rel=\"noreferrer\">\n                            Link\n                            <img src=\"/images/link.svg\" alt=\"link\"/>\n                          </a>\n                        </div>\n                      </div>\n                    </SwipeableListItem>\n                  </InView>\n              })}\n            </SwipeableList> \n        }\n\n        <div className=\"action-notification\">\n          <div className={`action-notification__btn action-notification__deleted br-10 ${notificationDeleted ? 'show-notification' : '' }`}>\n          <img src=\"/images/logo-black.svg\" alt=\"news deleted\"/>\n            <span>News <br/>deleted!</span>\n          </div>\n          <div className={`action-notification__btn action-notification__saved br-10 ${notificationSaved ? 'show-notification' : '' }`}>\n            <span>News <br/>saved!</span>\n            <img src=\"/images/logo-white.svg\" alt=\"news saved\"/>\n          </div>\n        </div>\n\n        <div className=\"country-select\">\n          <p>Filter the country <span>for your news</span></p>\n          <select \n            onChange={onCountryChange}\n            name=\"countryChange\" \n            id=\"countryChange\"\n          >\n            <option value=\"de\">Germany</option>\n            <option value=\"gb\">England</option>\n            <option value=\"it\">Italy</option>\n            <option value=\"bg\">Bulgaria</option>\n            <option value=\"us\">Usa</option>\n            <option value=\"cn\">China</option>\n          </select>\n        </div>\n\n\n        <div className=\"swipe-icons\">\n          <div className=\"swipe-icons-left\">\n            <div className=\"swipe-icons__icon icon-left\">\n              <img src=\"/images/swipe-left.svg\" alt=\"swipe left\"/>\n            </div>\n            <p>\n              <span>d</span>\n              <span>e</span>\n              <span>l</span>\n              <span>e</span>\n              <span>t</span>\n              <span>e</span>\n            </p>\n          </div>\n          <div className=\"swipe-icons-right\">\n            <div className=\"swipe-icons__icon icon-right\">\n              <img src=\"/images/swipe-right.svg\" alt=\"swipe right\"/>\n            </div>\n            <p>\n              <span>s</span>\n              <span>a</span>\n              <span>v</span>\n              <span>e</span>\n            </p>\n          </div>\n        </div>\n\n      </div>\n    </>\n  ); \n}\n\nexport default NewsPage;",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":24},{"ruleId":"157","severity":1,"message":"161","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":19},{"ruleId":"157","severity":1,"message":"162","line":11,"column":10,"nodeType":"159","messageId":"160","endLine":11,"endColumn":17},{"ruleId":"157","severity":1,"message":"163","line":11,"column":19,"nodeType":"159","messageId":"160","endLine":11,"endColumn":29},{"ruleId":"157","severity":1,"message":"164","line":12,"column":19,"nodeType":"159","messageId":"160","endLine":12,"endColumn":29},{"ruleId":"153","replacedBy":"165"},{"ruleId":"155","replacedBy":"166"},{"ruleId":"157","severity":1,"message":"167","line":45,"column":25,"nodeType":"159","messageId":"160","endLine":45,"endColumn":41},{"ruleId":"157","severity":1,"message":"168","line":4,"column":9,"nodeType":"159","messageId":"160","endLine":4,"endColumn":16},{"ruleId":"157","severity":1,"message":"169","line":10,"column":262,"nodeType":"159","messageId":"160","endLine":10,"endColumn":274},{"ruleId":"157","severity":1,"message":"170","line":10,"column":276,"nodeType":"159","messageId":"160","endLine":10,"endColumn":289},{"ruleId":"157","severity":1,"message":"171","line":10,"column":291,"nodeType":"159","messageId":"160","endLine":10,"endColumn":307},{"ruleId":"157","severity":1,"message":"172","line":5,"column":39,"nodeType":"159","messageId":"160","endLine":5,"endColumn":44},{"ruleId":"173","severity":1,"message":"174","line":87,"column":7,"nodeType":"175","endLine":87,"endColumn":109,"suggestions":"176"},{"ruleId":"153","replacedBy":"177"},{"ruleId":"155","replacedBy":"178"},{"ruleId":"157","severity":1,"message":"179","line":20,"column":27,"nodeType":"159","messageId":"160","endLine":20,"endColumn":33},{"ruleId":"157","severity":1,"message":"167","line":45,"column":25,"nodeType":"159","messageId":"160","endLine":45,"endColumn":41},{"ruleId":"157","severity":1,"message":"168","line":4,"column":9,"nodeType":"159","messageId":"160","endLine":4,"endColumn":16},{"ruleId":"157","severity":1,"message":"169","line":10,"column":262,"nodeType":"159","messageId":"160","endLine":10,"endColumn":274},{"ruleId":"157","severity":1,"message":"170","line":10,"column":276,"nodeType":"159","messageId":"160","endLine":10,"endColumn":289},{"ruleId":"157","severity":1,"message":"171","line":10,"column":291,"nodeType":"159","messageId":"160","endLine":10,"endColumn":307},{"ruleId":"157","severity":1,"message":"172","line":5,"column":39,"nodeType":"159","messageId":"160","endLine":5,"endColumn":44},{"ruleId":"157","severity":1,"message":"169","line":11,"column":161,"nodeType":"159","messageId":"160","endLine":11,"endColumn":173},{"ruleId":"173","severity":1,"message":"180","line":76,"column":7,"nodeType":"175","endLine":76,"endColumn":109,"suggestions":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'getRandomImage' is defined but never used.","Identifier","unusedVar","'LoadingPage' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setBgImage' is assigned a value but never used.",["182"],["183"],"'setDateForFilter' is assigned a value but never used.","'getNews' is defined but never used.","'setDailyNews' is assigned a value but never used.","'dateForFilter' is assigned a value but never used.","'countryForFilter' is assigned a value but never used.","'login' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dailyNews.length', 'getTempNews', and 'history.location'. Either include them or remove the dependency array.","ArrayExpression",["184"],["182"],["183"],"'Router' is defined but never used.","React Hook useEffect has missing dependencies: 'dailyNews', 'getTempNews', 'history.location', and 'tempNews.length'. Either include them or remove the dependency array.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [categoryForApi, selectedCountry, automaticCountry, memoizedCallback, checkForSavedNews, checkForNews, history.location, dailyNews.length, getTempNews]",{"range":"190","text":"191"},"Update the dependencies array to be: [categoryForApi, selectedCountry, automaticCountry, memoizedCallback, checkForSavedNews, checkForNews, history.location, dailyNews, tempNews.length, getTempNews]",{"range":"192","text":"193"},[3350,3452],"[categoryForApi, selectedCountry, automaticCountry, memoizedCallback, checkForSavedNews, checkForNews, history.location, dailyNews.length, getTempNews]",[3032,3134],"[categoryForApi, selectedCountry, automaticCountry, memoizedCallback, checkForSavedNews, checkForNews, history.location, dailyNews, tempNews.length, getTempNews]"]