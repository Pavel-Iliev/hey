[{"/Users/pavel/Desktop/solo-P/hey/client/src/index.js":"1","/Users/pavel/Desktop/solo-P/hey/client/src/App.js":"2","/Users/pavel/Desktop/solo-P/hey/client/src/reportWebVitals.js":"3","/Users/pavel/Desktop/solo-P/hey/client/src/ApiServices.js":"4","/Users/pavel/Desktop/solo-P/hey/client/src/test-redirect.jsx":"5","/Users/pavel/Desktop/solo-P/hey/client/src/components/loadingPage/LoadingPage.jsx":"6","/Users/pavel/Desktop/solo-P/hey/client/src/components/authentication/Authentication.jsx":"7","/Users/pavel/Desktop/solo-P/hey/client/src/components/backgroud/Background.jsx":"8","/Users/pavel/Desktop/solo-P/hey/client/src/components/componentsRegister/loginForm.jsx":"9","/Users/pavel/Desktop/solo-P/hey/client/src/components/componentsRegister/registerForm.jsx":"10","/Users/pavel/Desktop/solo-P/hey/client/src/components/dailyNews/DailyNews.jsx":"11","/Users/pavel/Desktop/solo-P/hey/client/src/components/headerPage/HeaderPage.jsx":"12","/Users/pavel/Desktop/solo-P/hey/client/src/components/rightMenu/RightMenu.jsx":"13","/Users/pavel/Desktop/solo-P/hey/client/src/components/leftMenu/LeftMenu.jsx":"14","/Users/pavel/Desktop/solo-P/hey/client/src/components/newsPage/NewsPage.jsx":"15"},{"size":500,"mtime":1609177352213,"results":"16","hashOfConfig":"17"},{"size":1933,"mtime":1610824456575,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609177352214,"results":"19","hashOfConfig":"17"},{"size":3361,"mtime":1610824344346,"results":"20","hashOfConfig":"17"},{"size":140,"mtime":1610202683594,"results":"21","hashOfConfig":"22"},{"size":611,"mtime":1610539859727,"results":"23","hashOfConfig":"17"},{"size":3473,"mtime":1610701608980,"results":"24","hashOfConfig":"17"},{"size":179,"mtime":1610814641530,"results":"25","hashOfConfig":"17"},{"size":2584,"mtime":1610806291604,"results":"26","hashOfConfig":"17"},{"size":3125,"mtime":1610808520726,"results":"27","hashOfConfig":"17"},{"size":7979,"mtime":1610825589365,"results":"28","hashOfConfig":"17"},{"size":1233,"mtime":1610822282868,"results":"29","hashOfConfig":"17"},{"size":3731,"mtime":1610823858530,"results":"30","hashOfConfig":"17"},{"size":4943,"mtime":1610811799041,"results":"31","hashOfConfig":"17"},{"size":2980,"mtime":1610891359626,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1adflxo",{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"12lesjw",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pavel/Desktop/solo-P/hey/client/src/index.js",[],["68","69"],"/Users/pavel/Desktop/solo-P/hey/client/src/App.js",["70","71","72","73","74"],"import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { getRandomImage } from './ApiServices';\n\nimport LoadingPage from './components/loadingPage/LoadingPage';\nimport AuthenticationPage from './components/authentication/Authentication';\nimport DailyNews from './components/dailyNews/DailyNews'\n\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [bgImage, setBgImage] = useState('');\n  const [isUserAuthenticated, setIsUserAuthenticated] = useState(window.localStorage.getItem('token') ? true : false);\n  const [user, setUser] = useState(null);\n\n\n  useEffect(() => {\n    // setTimeout(() => setLoading(false), 3700);\n    // getRandomImage()\n    //   .then(photo => setBgImage(photo.urls.regular));\n\n      \n    // axios.get('https://newsapi.org/v2/top-headlines?country=us&apiKey=797f19cbeedc498184dd394628e6bbd4').then(data => data.data)\n\n    // fetch(`http://newsapi.org/v2/everything?q=bitcoin&from=2020-12-16&sortBy=publishedAt&apiKey=d21ca6233a114ed7b4c8df72e41486c5`)\n    // .then(response => response.json())\n    // .then(data => console.log(data));\n\n\n  }, []);\n\n  return (\n    <div className=\"App\">\n\n      {\n\n        isUserAuthenticated ? \n          <DailyNews\n            user={user}\n            setUser={setUser}\n            setIsUserAuthenticated={setIsUserAuthenticated}\n          /> : \n          <AuthenticationPage \n          bgImage={bgImage}\n          isUserAuthenticated={isUserAuthenticated}\n          setIsUserAuthenticated={setIsUserAuthenticated}\n          user={user}\n          setUser={setUser}/>\n\n        // loading === false ? (isUserAuthenticated ? <DailyNews /> : <AuthenticationPage \n        //   bgImage={bgImage}\n        //   isUserAuthenticated={isUserAuthenticated}\n        //   setIsUserAuthenticated={setIsUserAuthenticated}\n        //   user={user}\n        //   setUser={setUser}/>) : (<LoadingPage />)\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/pavel/Desktop/solo-P/hey/client/src/reportWebVitals.js",[],"/Users/pavel/Desktop/solo-P/hey/client/src/ApiServices.js",[],"/Users/pavel/Desktop/solo-P/hey/client/src/test-redirect.jsx",[],["75","76"],"/Users/pavel/Desktop/solo-P/hey/client/src/components/loadingPage/LoadingPage.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/authentication/Authentication.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/backgroud/Background.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/componentsRegister/loginForm.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/componentsRegister/registerForm.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/dailyNews/DailyNews.jsx",["77","78","79","80"],"import './style-dailyNews.css';\nimport { useState, useEffect } from 'react';\nimport Background from '../../components/backgroud/Background';\nimport HeaderPage from '../../components/headerPage/HeaderPage';\nimport { getWeather, getNewsCategory } from '../../ApiServices';\nimport RightMenu from '../rightMenu/RightMenu';\nimport LeftMenu from '../leftMenu/LeftMenu';\nimport NewsPage from '../newsPage/NewsPage';\nimport { \n  getFiltersServer, \n  postFiltersPersonal, \n  deleteFilters, \n  getTime, \n  postTime,\n  getNewsServer,\n  postNewsPersonal,\n  deleteNews,\n} from '../../ApiServices';\n\nimport { BrowserRouter as Router , Switch , Route } from \"react-router-dom\";\n\nfunction DailyNews(props) {\n  const { user, setIsUserAuthenticated, setUser } = props;\n  const [titlePage, setTitlePage] = useState('Your Daily News');\n\n  const [isLefMenuOpen, setIsLeftMenuOpen] = useState(false);\n  const [isRightMenuOpen, setIsRightMenuOpen] = useState(false);\n\n  const [time, setTime] = useState('');\n\n  const [countryGeolocation, setCountryGeolocation] = useState('');\n  const [cityGeolocation, setCityGeolocation] = useState('');\n  const [temperatureDescGeolocation, setTemperatureDescGeolocation] = useState('');\n  const [highTemperatureGeolocation, setHighTemperatureGeolocation] = useState('');\n  const [lowTemperatureGeolocation, setLowTemperatureGeolocation] = useState('');\n  const [iconLinkGeolocation, setIconLinkGeolocation] = useState('');\n\n  const [filters, setFilters] = useState([]);\n\n  const [clockTime, setClockTime] = useState([]);\n\n  const [categories, setCategories] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('gb'); // only for inital state, untill the user set or accept the global notification\n\n\n  const [newsServer, setNewsServer] = useState([]);\n\n  useEffect(() => {\n  \n    // convert countr y name to iso code, used to filter country headtitles\n    const countries = require(\"i18n-iso-countries\");\n    countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n\n        getWeather(latitude, longitude).then((data) => {\n          setTime(data.data.observations.location[0].observation[0].utcTime);\n          setCountryGeolocation(data.data.observations.location[0].observation[0].country);\n          setCityGeolocation(data.data.observations.location[0].observation[0].city);\n          setTemperatureDescGeolocation(data.data.observations.location[0].observation[0].temperatureDesc);\n          setHighTemperatureGeolocation(data.data.observations.location[0].observation[0].highTemperature);\n          setLowTemperatureGeolocation(data.data.observations.location[0].observation[0].lowTemperature);\n          setIconLinkGeolocation(data.data.observations.location[0].observation[0].iconLink);\n\n          const country = countries.getAlpha2Code(data.data.observations.location[0].country, \"en\").toLowerCase()\n          // first the country is UK, once accept the position notification, turn all on the current state\n          // setSelectedCountry(country);\n          // getAndSetNewsCategoriesByCountry(country);\n        });\n      });\n\n      getFiltersServer().then((filters) => setFilters(filters));\n      getTime().then(timeClock => setClockTime(timeClock));\n      getNewsServer().then((news) => setNewsServer(news));\n    }  \n  }, [])\n\n  function addFilters( addFilter ) {\n    postFiltersPersonal( addFilter )\n      .then((filter) => setFilters([...filters, filter.data]));\n  }\n\n  function deleteOnefilter(id) {\n    deleteFilters(id).then(() => {\n      setFilters((filter) =>\n        filter.filter((filterDelete) => filterDelete._id !== id)\n      );\n    });\n  }\n\n  function addTime( timeToAdd) {\n    postTime( timeToAdd )\n      .then((time) => setClockTime(time.data));\n  }\n\n  // get Categories LOGIC from api\n  // //set the new country after select it\n  // function onCountryChange(event) {\n  //   setSelectedCountry(event.target.value);\n  //   getAndSetNewsCategoriesByCountry(event.target.value);\n  // }\n\n  // //function to set the categories by country\n  // function getAndSetNewsCategoriesByCountry(country) {\n  //   const categoryPromises = [\"business\", \"entertainment\", \"general\", \"health\", \"science\", \"sports\", \"technology\",].map((category) => getNewsCategory(country, category));\n\n  //   Promise.all(categoryPromises).then((categories) =>\n  //     setCategories(categories)\n  //   );\n  // }\n\n  //post method\n  function addNewsToPersonal(author, description, publishedAt, source, title, url, urlToImage) {\n    postNewsPersonal(author, description, publishedAt, source, title, url, urlToImage)\n      .then((event) => setNewsServer([...newsServer, event.data]));\n  }\n\n  //deleteMethod\n  function deleteOneNews(id) {\n    deleteNews(id).then(() => {\n      setNewsServer((news) =>\n        news.filter((newsDelete) => newsDelete._id !== id)\n      );\n    });\n  }\n\n  return(\n    <>\n      <div className=\"home height-page\">\n\n        <Router>\n          <HeaderPage \n            titlePage={titlePage}\n            setTitlePage={setTitlePage}\n            time={time}\n          />\n          <Background />\n\n          <RightMenu \n            isLefMenuOpen={isLefMenuOpen}\n            setIsLeftMenuOpen={setIsLeftMenuOpen}\n            isRightMenuOpen={isRightMenuOpen}\n            setIsRightMenuOpen={setIsRightMenuOpen}\n          />\n          <LeftMenu \n            user={user}\n            setUser={setUser}\n            setIsUserAuthenticated={setIsUserAuthenticated}\n            filters={filters}\n            addFilters={addFilters}\n            deleteOnefilter={deleteOnefilter}\n            clockTime={clockTime}\n            addTime={addTime}\n            countryGeolocation={countryGeolocation}\n            cityGeolocation={cityGeolocation}\n            temperatureDescGeolocation={temperatureDescGeolocation}\n            highTemperatureGeolocation={highTemperatureGeolocation}\n            lowTemperatureGeolocation={lowTemperatureGeolocation}\n            iconLinkGeolocation={iconLinkGeolocation}\n            categories={categories}\n            selectedCountry={selectedCountry}\n            isLefMenuOpen={isLefMenuOpen}\n            setIsLeftMenuOpen={setIsLeftMenuOpen}\n            isRightMenuOpen={isRightMenuOpen}\n            setIsRightMenuOpen={setIsRightMenuOpen}\n          />\n\n          <Switch>\n            <Route path=\"/daily\">\n              <h1>Daily news</h1>\n              <NewsPage \n                newsForPage={newsServer}\n                addNewsToPersonal={addNewsToPersonal}\n                deleteOneNews={deleteOneNews}\n              />\n            </Route>\n            <Route path=\"/business\">\n              <h1>Business news</h1>\n              <NewsPage />\n            </Route>\n            <Route path=\"/technology\">\n              <h1>Technology news</h1>\n              <NewsPage />\n            </Route>\n            <Route path=\"/entertainment\">\n              <h1>Entertainment news</h1>\n              <NewsPage />\n            </Route>\n            <Route path=\"/health\">\n              <h1>Health news</h1>\n              <NewsPage />\n            </Route>\n            <Route path=\"/general\">\n              <h1>General news</h1>\n              <NewsPage />\n            </Route>\n            <Route path=\"/science\">\n              <h1>Science news</h1>\n              <NewsPage />\n            </Route>\n            <Route path=\"/sports\">\n              <h1>Sports news</h1>\n              <NewsPage />\n            </Route>\n          </Switch>\n        </Router>\n        \n        {/* <select \n          onChange={onCountryChange} \n          name=\"countryChange\" \n          id=\"countryChange\"\n        >\n          <option value=\"gb\">England</option>\n          <option value=\"it\">Italy</option>\n          <option value=\"sp\">Spain</option>\n          <option value=\"fr\">France</option>\n        </select> */}\n        \n      </div>\n      \n    </>\n  ); \n}\n\nexport default DailyNews;","/Users/pavel/Desktop/solo-P/hey/client/src/components/headerPage/HeaderPage.jsx",["81"],"import './style-headerPage.css';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction HeaderPage(props) {\n  const { titlePage, time, setTitlePage } = props;\n  const location = useLocation();\n  useEffect(()=>{\n    if(location && location.state !== undefined) {\n      setTitlePage(location.state.category)\n    }\n  },[location])\n  return(\n    <>\n    <div className=\"header-page\">\n      <img className=\"bg-top\" src=\"/images/header-app.svg\" alt=\"top of the app\" />\n      <div className=\"header-page__info\">\n        <img className=\"logo-oage\" src=\"/images/logo-page.svg\" alt=\"logo for the pages\" />\n        <div className=\"header-page__info--text\">\n          <span className=\"header-page__data color-blue\">{time ? moment(time).format(\"MMM Do YY\") : 'loading data...'}</span>\n          <h2 className=\"title-page\">{titlePage}</h2>\n        </div>\n      </div>\n    </div>\n\n    {/* <div>{selectedCountry}</div>\n      <select onChange={onCountryChange}>\n        <option value=\"gb\">UK</option>\n        <option value=\"it\">Italy</option>\n        <option value=\"us\">Us</option>\n        <option value=\"bg\">BG</option>\n      </select> */}\n    </>\n  ); \n}\n\nexport default HeaderPage;","/Users/pavel/Desktop/solo-P/hey/client/src/components/rightMenu/RightMenu.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/leftMenu/LeftMenu.jsx",[],"/Users/pavel/Desktop/solo-P/hey/client/src/components/newsPage/NewsPage.jsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":3,"column":10,"nodeType":"88","messageId":"89","endLine":3,"endColumn":24},{"ruleId":"86","severity":1,"message":"90","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":19},{"ruleId":"86","severity":1,"message":"91","line":11,"column":10,"nodeType":"88","messageId":"89","endLine":11,"endColumn":17},{"ruleId":"86","severity":1,"message":"92","line":11,"column":19,"nodeType":"88","messageId":"89","endLine":11,"endColumn":29},{"ruleId":"86","severity":1,"message":"93","line":12,"column":19,"nodeType":"88","messageId":"89","endLine":12,"endColumn":29},{"ruleId":"82","replacedBy":"94"},{"ruleId":"84","replacedBy":"95"},{"ruleId":"86","severity":1,"message":"96","line":5,"column":22,"nodeType":"88","messageId":"89","endLine":5,"endColumn":37},{"ruleId":"86","severity":1,"message":"97","line":42,"column":22,"nodeType":"88","messageId":"89","endLine":42,"endColumn":35},{"ruleId":"86","severity":1,"message":"98","line":43,"column":27,"nodeType":"88","messageId":"89","endLine":43,"endColumn":45},{"ruleId":"86","severity":1,"message":"99","line":67,"column":17,"nodeType":"88","messageId":"89","endLine":67,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":13,"column":5,"nodeType":"102","endLine":13,"endColumn":15,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'getRandomImage' is defined but never used.","Identifier","unusedVar","'LoadingPage' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setBgImage' is assigned a value but never used.",["104"],["105"],"'getNewsCategory' is defined but never used.","'setCategories' is assigned a value but never used.","'setSelectedCountry' is assigned a value but never used.","'country' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setTitlePage'. Either include it or remove the dependency array.","ArrayExpression",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [location, setTitlePage]",{"range":"109","text":"110"},[383,393],"[location, setTitlePage]"]